{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","App","state","fetchedData","setState","this","src","coronaImage","image","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f43200a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1e8lq\",\"card\":\"Cards_card__3Gl8f\",\"infected\":\"Cards_infected__3MVaG\",\"recovered\":\"Cards_recovered__1ZgoS\",\"deaths\":\"Cards_deaths__58WJj\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nfunction Cards({data: {confirmed, recovered, deaths, lastUpdate}}) {\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp\r\n                            start={0}\r\n                            end={confirmed.value}\r\n                            duration={2.5}\r\n                            separator=',' />\r\n                        </Typography>\r\n                        <Typography\r\n                         color='textSecondary'>\r\n                             {new Date(lastUpdate).toDateString()}\r\n                             </Typography>\r\n                        <Typography variant='body2'>Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp\r\n                            start={0}\r\n                            end={recovered.value}\r\n                            duration={2.5}\r\n                            separator=',' />\r\n                        </Typography>\r\n                        <Typography\r\n                         color='textSecondary'>\r\n                             {new Date(lastUpdate).toDateString()}\r\n                             </Typography>\r\n                        <Typography variant='body2'>Number of recoveries of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp\r\n                            start={0}\r\n                            end={deaths.value}\r\n                            duration={2.5}\r\n                            separator=',' />\r\n                        </Typography>\r\n                        <Typography\r\n                         color='textSecondary'>\r\n                             {new Date(lastUpdate).toDateString()}\r\n                             </Typography>\r\n                        <Typography variant='body2'>Number of deaths caused of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async country => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n    const modifiedData = {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map(dailyData => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map(country => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nfunction Chart({data: {confirmed, recovered, deaths}, country}) {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI()\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length ?\r\n        (\r\n            <Line \r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0,0, 0.5)',\r\n                    fill: true,\r\n                }],\r\n            }} />\r\n        ): null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n          <Bar\r\n            data={{\r\n              labels: ['Infected', 'Recovered', 'Deaths'],\r\n              datasets: [\r\n                {\r\n                  label: 'People',\r\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                  data: [confirmed.value, recovered.value, deaths.value],\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              legend: { display: false },\r\n              title: { display: true, text: `Current state in ${country}` },\r\n            }}\r\n          />\r\n        ) : null\r\n      );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nfunction CountryPicker({handleCountryChange}) {\r\n    const [countries, setCountries] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n          setCountries(await fetchCountries());\r\n        };\r\n    \r\n        fetchAPI();\r\n      }, []);\r\n\r\n    return (\r\n        <FormControl className={styles.FormControl}>\r\n            <NativeSelect defaultValue='' onChange={(e)=> handleCountryChange(e.target.value)}>\r\n                <option value=''>Global</option>\r\n                {countries.map(country => (\r\n                    <option key={country} value={country}>{country}</option>\r\n                ))}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React, { Component } from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components/';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async country => {\r\n    const fetchedData = await fetchData(country);\r\n\r\n    this.setState({ data: fetchedData, country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img src={coronaImage} className={styles.image} alt='COVID-19' />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2NAM7\",\"image\":\"App_image__1tlep\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3ErND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2n0FQ\"};"],"sourceRoot":""}